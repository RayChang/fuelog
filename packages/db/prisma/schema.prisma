generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fuel_records {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id       String         @db.Uuid
  vehicle_id      String         @db.Uuid
  user_id         String         @db.Uuid
  gas_station_id  String         @db.Uuid
  fuel_type       fuel_type
  price_per_liter Decimal        @db.Decimal(12, 2)
  liters          Decimal        @db.Decimal(8, 3)
  fueling_method  fueling_method
  mileage         Int
  fueled_at       DateTime       @db.Timestamptz(6)
  created_at      DateTime       @default(now()) @db.Timestamptz(6)
  updated_at      DateTime       @default(now()) @db.Timestamptz(6)
  gas_stations    gas_stations   @relation(fields: [gas_station_id], references: [id], onUpdate: NoAction)
  tenants         tenants        @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           users          @relation(fields: [tenant_id, user_id], references: [tenant_id, id], onUpdate: NoAction)
  vehicles        vehicles       @relation(fields: [tenant_id, vehicle_id], references: [tenant_id, id], onDelete: Cascade, onUpdate: NoAction)

  @@index([tenant_id, user_id, fueled_at])
  @@index([tenant_id, vehicle_id, fueled_at])
}

model gas_stations {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  brand        brand_code
  name         String
  latitude     Decimal        @db.Decimal(10, 7)
  longitude    Decimal        @db.Decimal(10, 7)
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  updated_at   DateTime       @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime?      @db.Timestamptz(6)
  fuel_records fuel_records[]

  @@index([brand])
  @@index([name])
  @@index([latitude, longitude])
}

model tenants {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?            @db.Timestamptz(6)
  fuel_records       fuel_records[]
  users              users[]
  vehicle_ownerships vehicle_ownerships[]
  vehicles           vehicles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id          String               @db.Uuid
  email              String
  email_norm         String
  password_hash      String
  birth_year         Int
  gender             gender
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?            @db.Timestamptz(6)
  fuel_records       fuel_records[]
  tenants            tenants              @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  vehicle_ownerships vehicle_ownerships[]
  vehicles           vehicles[]

  @@unique([tenant_id, email_norm], map: "users_tenant_id_email_norm_idx")
  @@unique([tenant_id, id], map: "users_tenant_id_id_idx")
  @@index([tenant_id])
}

model vehicle_brands {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @unique(map: "vehicle_brands_name_idx")
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime         @default(now()) @db.Timestamptz(6)
  deleted_at     DateTime?        @db.Timestamptz(6)
  vehicle_models vehicle_models[]
  vehicles       vehicles[]
}

model vehicle_models {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  brand_id       String         @db.Uuid
  name           String
  created_at     DateTime       @default(now()) @db.Timestamptz(6)
  updated_at     DateTime       @default(now()) @db.Timestamptz(6)
  deleted_at     DateTime?      @db.Timestamptz(6)
  vehicle_brands vehicle_brands @relation(fields: [brand_id], references: [id], onUpdate: NoAction)
  vehicles       vehicles[]

  @@unique([brand_id, name], map: "vehicle_models_brand_id_name_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model vehicle_ownerships {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id  String    @db.Uuid
  vehicle_id String    @db.Uuid
  user_id    String    @db.Uuid
  is_owner   Boolean   @default(false)
  joined_at  DateTime  @default(now()) @db.Timestamptz(6)
  left_at    DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  tenants    tenants   @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users     @relation(fields: [tenant_id, user_id], references: [tenant_id, id], onUpdate: NoAction)
  vehicles   vehicles  @relation(fields: [tenant_id, vehicle_id], references: [tenant_id, id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([tenant_id, vehicle_id, user_id, is_owner], map: "vehicle_ownerships_tenant_id_vehicle_id_user_id_is_owner_idx")
  @@index([tenant_id, user_id])
  @@index([tenant_id, vehicle_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model vehicles {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id          String               @db.Uuid
  brand_id           String               @db.Uuid
  model_id           String               @db.Uuid
  year               Int
  displacement       Int
  current_mileage    Int
  owner_id           String               @db.Uuid
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?            @db.Timestamptz(6)
  fuel_records       fuel_records[]
  vehicle_ownerships vehicle_ownerships[]
  vehicle_brands     vehicle_brands       @relation(fields: [brand_id], references: [id], onUpdate: NoAction)
  vehicle_models     vehicle_models       @relation(fields: [model_id], references: [id], onUpdate: NoAction)
  tenants            tenants              @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users              users                @relation(fields: [tenant_id, owner_id], references: [tenant_id, id], onUpdate: NoAction)

  @@unique([tenant_id, id], map: "vehicles_tenant_id_id_idx")
  @@index([tenant_id, brand_id, model_id])
  @@index([tenant_id, owner_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fuel_prices {
  id             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  brand          brand_code
  fuel_type      fuel_type
  price          Decimal    @db.Decimal(12, 2)
  effective_date DateTime   @db.Date
  created_at     DateTime   @default(now()) @db.Timestamptz(6)
  updated_at     DateTime   @default(now()) @db.Timestamptz(6)

  @@unique([brand, fuel_type, effective_date], map: "fuel_prices_brand_fuel_type_effective_date_idx")
  @@index([brand, fuel_type])
  @@index([effective_date])
}

enum brand_code {
  CPC
  FORMOSA
  NPC
  TAYA
  FUMAO
  OTHER
}

enum fuel_type {
  NINETY_TWO
  NINETY_FIVE
  NINETY_EIGHT
  DIESEL
}

enum fueling_method {
  SELF_SERVICE
  ATTENDANT
}

enum gender {
  MALE
  FEMALE
  UNDISCLOSED
}
