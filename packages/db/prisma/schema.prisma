generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model FuelPrice {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  brand          BrandCode
  fuel_type      FuelType
  price          Decimal   @db.Decimal(12, 2)
  effective_date DateTime  @db.Date
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @default(now()) @db.Timestamptz(6)

  @@unique([brand, fuel_type, effective_date], map: "fuel_prices_brand_fuel_type_effective_date_idx")
  @@index([brand, fuel_type])
  @@index([effective_date])
  @@map("fuel_prices")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model FuelRecord {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id       String       @db.Uuid
  vehicle_id      String       @db.Uuid
  user_id         String       @db.Uuid
  gas_station_id  String       @db.Uuid
  fuel_type       FuelType
  price_per_liter Decimal      @db.Decimal(12, 2)
  liters          Decimal      @db.Decimal(8, 3)
  fueling_method  FuelingMethod
  mileage         Int
  fueled_at       DateTime     @db.Timestamptz(6)
  created_at      DateTime     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime     @default(now()) @db.Timestamptz(6)
  gasStation      GasStation   @relation(fields: [gas_station_id], references: [id], onUpdate: NoAction)
  tenant          Tenant       @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            User         @relation(fields: [tenant_id, user_id], references: [tenant_id, id], onUpdate: NoAction)
  vehicle         Vehicle      @relation(fields: [tenant_id, vehicle_id], references: [tenant_id, id], onDelete: Cascade, onUpdate: NoAction)

  @@index([tenant_id, user_id, fueled_at])
  @@index([tenant_id, vehicle_id, fueled_at])
  @@map("fuel_records")
}

model GasStation {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  brand        BrandCode
  name         String
  latitude     Decimal      @db.Decimal(10, 7)
  longitude    Decimal      @db.Decimal(10, 7)
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime?    @db.Timestamptz(6)
  fuelRecords  FuelRecord[]

  @@index([brand])
  @@index([latitude, longitude])
  @@index([name])
  @@map("gas_stations")
}

model Tenant {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  created_at         DateTime            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime            @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?           @db.Timestamptz(6)
  fuelRecords        FuelRecord[]
  users              User[]
  vehicleOwnerships  VehicleOwnership[]
  vehicles           Vehicle[]

  @@map("tenants")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id          String              @db.Uuid
  email              String
  email_norm         String
  password_hash      String
  birth_year         Int
  gender             Gender
  created_at         DateTime            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime            @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?           @db.Timestamptz(6)
  fuelRecords        FuelRecord[]
  tenant             Tenant              @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  vehicleOwnerships  VehicleOwnership[]
  vehicles           Vehicle[]

  @@unique([tenant_id, email_norm], map: "users_tenant_id_email_norm_idx")
  @@unique([tenant_id, id], map: "users_tenant_id_id_idx")
  @@index([tenant_id])
  @@map("users")
}

model VehicleBrand {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String         @unique(map: "vehicle_brands_name_idx")
  created_at     DateTime       @default(now()) @db.Timestamptz(6)
  updated_at     DateTime       @default(now()) @db.Timestamptz(6)
  deleted_at     DateTime?      @db.Timestamptz(6)
  vehicleModels  VehicleModel[]
  vehicles       Vehicle[]

  @@map("vehicle_brands")
}

model VehicleModel {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  brand_id     String       @db.Uuid
  name         String
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime?    @db.Timestamptz(6)
  vehicleBrand VehicleBrand @relation(fields: [brand_id], references: [id], onUpdate: NoAction)
  vehicles     Vehicle[]

  @@unique([brand_id, name], map: "vehicle_models_brand_id_name_idx")
  @@map("vehicle_models")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model VehicleOwnership {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id  String    @db.Uuid
  vehicle_id String    @db.Uuid
  user_id    String    @db.Uuid
  is_owner   Boolean   @default(false)
  joined_at  DateTime  @default(now()) @db.Timestamptz(6)
  left_at    DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  tenant     Tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       User      @relation(fields: [tenant_id, user_id], references: [tenant_id, id], onUpdate: NoAction)
  vehicle    Vehicle   @relation(fields: [tenant_id, vehicle_id], references: [tenant_id, id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([tenant_id, vehicle_id, user_id, is_owner], map: "vehicle_ownerships_tenant_id_vehicle_id_user_id_is_owner_idx")
  @@index([tenant_id, user_id])
  @@index([tenant_id, vehicle_id])
  @@map("vehicle_ownerships")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Vehicle {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id          String              @db.Uuid
  brand_id           String              @db.Uuid
  model_id           String              @db.Uuid
  year               Int
  displacement       Int
  current_mileage    Int
  owner_id           String              @db.Uuid
  created_at         DateTime            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime            @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?           @db.Timestamptz(6)
  fuelRecords        FuelRecord[]
  vehicleOwnerships  VehicleOwnership[]
  vehicleBrand       VehicleBrand        @relation(fields: [brand_id], references: [id], onUpdate: NoAction)
  vehicleModel       VehicleModel        @relation(fields: [model_id], references: [id], onUpdate: NoAction)
  tenant             Tenant              @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  owner              User                @relation(fields: [tenant_id, owner_id], references: [tenant_id, id], onUpdate: NoAction)

  @@unique([tenant_id, id], map: "vehicles_tenant_id_id_idx")
  @@index([tenant_id, brand_id, model_id])
  @@index([tenant_id, owner_id])
  @@map("vehicles")
}

enum BrandCode {
  CPC
  FORMOSA
  NPC
  TAYA
  FUMAO
  OTHER

  @@map("brand_code")
}

enum FuelType {
  NINETY_TWO
  NINETY_FIVE
  NINETY_EIGHT
  DIESEL

  @@map("fuel_type")
}

enum FuelingMethod {
  SELF_SERVICE
  ATTENDANT

  @@map("fueling_method")
}

enum Gender {
  MALE
  FEMALE
  UNDISCLOSED

  @@map("gender")
}
